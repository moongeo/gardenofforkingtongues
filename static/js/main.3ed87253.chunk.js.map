{"version":3,"sources":["components/TextSplitter.js","components/BlurText.js","components/ScrollingText.js","App.js","index.js"],"names":["TextSplitter","_ref","text","texts","setTexts","useState","_jsx","style","display","flexDirection","alignItems","children","map","t","index","width","textAlign","cursor","onClick","prevTexts","newTexts","splitText","splice","handleClick","BlurText","isBlurred","setIsBlurred","handleZoom","window","outerWidth","innerWidth","outerHeight","innerHeight","useEffect","addEventListener","removeEventListener","filter","ScrollingText","fontSize","setFontSize","handleScroll","event","prevFontSize","concat","App","_jsxs","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"oMA0BeA,MAvBMC,IAAe,IAAd,KAAEC,GAAMD,EAC5B,MAAOE,EAAOC,GAAYC,mBAAS,CAACH,IAWpC,OACEI,cAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,WAAY,UAAWC,SAC5ER,EAAMS,KAAI,CAACC,EAAGC,IACbR,cAAA,OAAiBC,MAAO,CAAEQ,MAAO,OAAQC,UAAW,SAAUC,OAAQ,WAAaC,QAASA,IAZ7EJ,KACnBV,GAAUe,IACR,MAAMC,EAAW,IAAID,GACfE,EAAYD,EAASN,GAE3B,OADAM,EAASE,OAAOR,EAAO,EAAGO,EAAWA,GAC9BD,CAAQ,GACf,EAMoGG,CAAYT,GAAOH,SACnHL,cAAA,KAAAK,SAAIE,KADIC,MAIR,ECAKU,MAnBEvB,IAAe,IAAd,KAAEC,GAAMD,EACxB,MAAOwB,EAAWC,GAAgBrB,oBAAS,GAErCsB,EAAaA,KACjBD,EAAaE,OAAOC,aAAeD,OAAOE,YAAcF,OAAOG,cAAgBH,OAAOI,YAAY,EAUpG,OAPAC,qBAAU,KACRL,OAAOM,iBAAiB,SAAUP,GAC3B,KACLC,OAAOO,oBAAoB,SAAUR,EAAW,IAEjD,IAGDrB,cAAA,KAAGC,MAAO,CAAE6B,OAAQX,EAAY,YAAc,QAASd,SAAET,GAAS,ECYvDmC,MA3BOpC,IAAe,IAAd,KAAEC,GAAMD,EAC7B,MAAOE,EAAOC,GAAYC,mBAAS,CAACH,KAC7BoC,EAAUC,GAAelC,mBAAS,IAEnCmC,EAAgBC,IACpBrC,GAAUe,GACS,IAAIA,KAAcA,KAIrCoB,GAAaG,GAAiBA,EAAe,KAAI,EAQnD,OALAT,qBAAU,KACRL,OAAOM,iBAAiB,SAAUM,GAC3B,IAAMZ,OAAOO,oBAAoB,SAAUK,KACjD,IAGDlC,cAAA,OAAKC,MAAO,CAAE+B,SAAS,GAADK,OAAKL,EAAQ,OAAO3B,SACvCR,EAAMS,KAAI,CAACC,EAAGC,IACbR,cAAA,KAAAK,SAAgBE,GAARC,MAEN,EC0BK8B,MA9CHA,KACV,MAAM1C,EAAI,qwHAmCV,OACE2C,eAAA,OAAAlC,SAAA,CACEL,cAAA,MAAAK,SAAI,kCACJL,cAACN,EAAY,CAACE,KAAMA,IACpBI,cAAC+B,EAAa,CAACnC,KAAMA,IACrBI,cAACkB,EAAQ,CAACtB,KAAMA,MACZ,EC1CV4C,IAASC,OACPzC,cAAC0C,IAAMC,WAAU,CAAAtC,SACfL,cAACsC,EAAG,MAENM,SAASC,eAAe,Q","file":"static/js/main.3ed87253.chunk.js","sourcesContent":["// src/components/TextSplitter.js\nimport React, { useState } from 'react';\n\nconst TextSplitter = ({ text }) => {\n  const [texts, setTexts] = useState([text]);\n\n  const handleClick = (index) => {\n    setTexts((prevTexts) => {\n      const newTexts = [...prevTexts];\n      const splitText = newTexts[index];\n      newTexts.splice(index, 1, splitText, splitText);\n      return newTexts;\n    });\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n      {texts.map((t, index) => (\n        <div key={index} style={{ width: '100%', textAlign: 'center', cursor: 'pointer' }} onClick={() => handleClick(index)}>\n          <p>{t}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TextSplitter;\n\n","// src/components/BlurText.js\nimport React, { useState, useEffect } from 'react';\n\nconst BlurText = ({ text }) => {\n  const [isBlurred, setIsBlurred] = useState(false);\n\n  const handleZoom = () => {\n    setIsBlurred(window.outerWidth !== window.innerWidth || window.outerHeight !== window.innerHeight);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', handleZoom);\n    return () => {\n      window.removeEventListener('resize', handleZoom);\n    };\n  }, []);\n\n  return (\n    <p style={{ filter: isBlurred ? 'blur(2px)' : 'none' }}>{text}</p>\n  );\n};\n\nexport default BlurText;\n\n\n","// src/components/ScrollingText.js\nimport React, { useState, useEffect } from 'react';\n\nconst ScrollingText = ({ text }) => {\n  const [texts, setTexts] = useState([text]);\n  const [fontSize, setFontSize] = useState(16);\n\n  const handleScroll = (event) => {\n    setTexts((prevTexts) => {\n      const newTexts = [...prevTexts, ...prevTexts];\n      return newTexts;\n    });\n\n    setFontSize((prevFontSize) => prevFontSize / 1.1);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  return (\n    <div style={{ fontSize: `${fontSize}px` }}>\n      {texts.map((t, index) => (\n        <p key={index}>{t}</p>\n      ))}\n    </div>\n  );\n};\n\nexport default ScrollingText;\n\n\n\n\n","// src/App.js\nimport React from 'react';\nimport TextSplitter from './components/TextSplitter';\nimport BlurText from './components/BlurText';\nimport ScrollingText from './components/ScrollingText';\n\nconst App = () => {\n  const text = `아문\n  나무가 말했다 a tree spoke to me.\n  Lembro-me da sua ancestral I remember your ancestor. \n  보랏빛 꽃잎이 바닥에 날리고 purple petals flutter to the floor\n  독한 냄새가 났다 and there was a strong smell. \n  Lembro-me da sua ancestral I remember your ancestor \n  Olhando para as pétalas roxas looking up at the purple petals. \n  내가 열 네 살 때 when I was fourteen\n  족보를 돈 주고 샀다는 걸 깨달았다 I realised that we purchased our jokbo.\n  그 기억이 났다 I remembered that.\n  졸업앨범 같은 투박하고 두꺼운 책이었다 it was a clunky, thick book, like a graduation photo album.\n  나무가 말했다 said the tree. \n  Estou me rembrando da sua ancestral I remember your ancestor.\n  \n  나는 내 후손을 기억하지 않아 I don't remember my descendants.\n  나는 그런 방향으로는 생각하지 않아 I don't think in that direction.\n  내가 대답했다 answered I.\n   Não ficou curiosa aren’t you curious? Como suas ancestrais how your ancestors\n  estavam aqui antes de você were here before you.\n  나무가 말했다 said the tree.\n  어쩌면 perhaps 배를 타고 by boat. 아니면 or—\n  어떻게든 somehow—\n  하지만 함정이 있지 but there’s a catch. 조상이 my ancestor—\n  꼭 한반도(이상한 이름)에서 태어났을 리 없잖아 they couldn’t have been born there (strange name).\n  (금요일 밤 on a Friday night, 거리에서는 옆 건물에서 흐르는 라이브 음악 there is live music on the street from the building next door—모두가 따라부르는 통속적인 popular music that everyone is singing along to—이 흐르고 있다.)\n  \n  그렇지 yes. 내가 기차와 택시를 탈 때는 이런 생각을 하지 않았다 I didn’t think about this when I took trains and taxis. \n  나는 나무 아래에 있었다 I was under a tree. 대담하게도 boldly.\n  겁이 나서 계속 조금씩 자리를 이동하면서도 even though I was scared and kept moving little by little—나무 아래에 있었다 I was under the tree.\n  나무가 되고 싶다는 사람에 대한 마음은 씻은듯이 사라졌다 the feelings I had for her who wanted to become a tree disappeared as if washed away.\n  나는 물었다 I asked  “이제 어떻게 살아야 하지 Como devo viver agora? ”\n  “돌아가는 시간은 존재하지 않아 Não há tempo para voltar.”\n  나는 이제 그런 식으로 여행하지 않을거야 I won’t travel like that anymore.\n  Estou olhando para sua ancestral 네 조상을 보고 있어. 나무는 내 곁에 없기도 하고, 있기도 했다 The tree was either not there or by my side.`;\n\n  return (\n    <div>\n      <h1>The Garden of Forking Tongues</h1>\n      <TextSplitter text={text} />\n      <ScrollingText text={text} />\n      <BlurText text={text} />\n    </div>\n  );\n};\n\nexport default App;\n\n\n","// src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}